//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskManagementServer
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="STask", Namespace="http://schemas.datacontract.org/2004/07/TaskManagementServer")]
    public partial class STask : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string IdField;
        
        private string[] STaskParametersField;
        
        private string STaskTypeNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] STaskParameters
        {
            get
            {
                return this.STaskParametersField;
            }
            set
            {
                this.STaskParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STaskTypeName
        {
            get
            {
                return this.STaskTypeNameField;
            }
            set
            {
                this.STaskTypeNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="STaskStatus", Namespace="http://schemas.datacontract.org/2004/07/TaskManagementServer")]
    public enum STaskStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Faulted = 2,
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITaskCoordinator", CallbackContract=typeof(ITaskCoordinatorCallback))]
public interface ITaskCoordinator
{
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITaskCoordinator/SubmitRequest")]
    void SubmitRequest(TaskManagementServer.STask[] stask);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITaskCoordinator/SubmitRequest")]
    System.Threading.Tasks.Task SubmitRequestAsync(TaskManagementServer.STask[] stask);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskCoordinator/CancelTask", ReplyAction="http://tempuri.org/ITaskCoordinator/CancelTaskResponse")]
    bool CancelTask(string Id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITaskCoordinator/CancelTask", ReplyAction="http://tempuri.org/ITaskCoordinator/CancelTaskResponse")]
    System.Threading.Tasks.Task<bool> CancelTaskAsync(string Id);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ITaskCoordinatorCallback
{
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITaskCoordinator/UpdateStatus")]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskManagementServer.STask[]))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskManagementServer.STask))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TaskManagementServer.STaskStatus))]
    [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
    void UpdateStatus(string id, TaskManagementServer.STaskStatus status, object result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ITaskCoordinatorChannel : ITaskCoordinator, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class TaskCoordinatorClient : System.ServiceModel.DuplexClientBase<ITaskCoordinator>, ITaskCoordinator
{
    
    public TaskCoordinatorClient(System.ServiceModel.InstanceContext callbackInstance) : 
            base(callbackInstance)
    {
    }
    
    public TaskCoordinatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
            base(callbackInstance, endpointConfigurationName)
    {
    }
    
    public TaskCoordinatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public TaskCoordinatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public TaskCoordinatorClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, binding, remoteAddress)
    {
    }
    
    public void SubmitRequest(TaskManagementServer.STask[] stask)
    {
        base.Channel.SubmitRequest(stask);
    }
    
    public System.Threading.Tasks.Task SubmitRequestAsync(TaskManagementServer.STask[] stask)
    {
        return base.Channel.SubmitRequestAsync(stask);
    }
    
    public bool CancelTask(string Id)
    {
        return base.Channel.CancelTask(Id);
    }
    
    public System.Threading.Tasks.Task<bool> CancelTaskAsync(string Id)
    {
        return base.Channel.CancelTaskAsync(Id);
    }
}
